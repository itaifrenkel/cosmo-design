define install_service
    _install_mysql_service

define _install_mysql_service
    sequence
        get_availability_zones availability_zones:2
        set to_f: appliance, value: ${mysql_appliance}
        concurrent
            sequence tag: master_started
                create_volume snapshot: ${mysql_snapshot},
                             availability_zone: ${availability_zones.0},
                             to_f: attached_volume_zone1
                             if: ${!attached_volume_zone1}
                start_appliance availability_zone: ${availability_zones.0},
                                attached_volume: ${attached_volume_zone1}
                appliance exec: start_master
            sequence
                create_volume snapshot: ${mysql_snapshot},
                             availability_zone: ${availability_zones.0},
                             to_f: attached_volume_zone2
                             if: ${!attached_volume_zone2}
                start_appliance availability_zone: ${availability_zones.1}
                                attached_volume: ${attached_volume_zone2}
                appliance exec: start_slave,
                          await: master_started

define on_appliance_failed
    sequence
        given
            that "${appliance.last_state} == slave"
                recover_slave
            that "${appliance.last_state} == master"
                recover_master

define recover_master
    concurrence
        sequence tag: master_started
            appliance exec: change_from_slave_to_master
        sequence
            start_appliance availability_zone: ${appliance.availability_zone},
                            attached_volume: ${appliance.attached_volume}
            appliance exec: start_slave, :await master_started